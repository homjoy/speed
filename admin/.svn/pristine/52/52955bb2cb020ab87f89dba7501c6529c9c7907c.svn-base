<?php

namespace Admin\Package\Mail;


/**
 * mail 的通用方法
 * @package Admin\Package\Workflow
 * @author guojiezhu@meilishuo.com
 * @since 2015-11-05
 */

class MailGroup extends \Admin\Package\Common\BasePackage {
    //mail的发送地址
    private static $instance = null;
    private function __construct() {}
    //公共必填 邮件组
    public static $com_mail_group = array(
        'allstaff',
    );
    public static function getInstance()
    {
        if(is_null(self::$instance)){
            self::$instance = new self();
          
        }
        return self::$instance;
    }


    /**
     * 获取加密数据
     * @param $act
     *
     * @return string
     */
    public  function checkKey($act){
        $ts = time();
        $sharedkey = "CoreMail2015";
        $nseckey = $sharedkey . $act . "$ts" ;
        $seckey = md5($nseckey);
        return $seckey;
    }
    

    /**
     * 获取邮件组的列表
     * @param array $params
     *
     * @return bool
     */
    public  function getMailGroupList($params = array()){

        $ret = self::getClient()->call('atom', 'mail/mail_group_search', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }

    /**
     * @param array $params
     *
     * @return bool
     */
    public  function createMailGroup($params = array()){

        $ret = self::getClient()->call('atom', 'mail/mail_group_create', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }

    /**
     * 删除邮件列表
     * @param array $params
     *
     * @return bool
     */
    public  function deleteMailGroup($params = array() ){

        $ret = self::getClient()->call('atom', 'mail/mail_group_update', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }


    /**
     * 更新邮件列表
     * @param array $params
     *
     * @return bool
     */
    public  function updateMailGroup($params = array() ){

        $ret = self::getClient()->call('atom', 'mail/mail_group_update', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }
    /**
     * 远程读取 邮件组信息
     * @param array $params
     * @return bool
     */
    public function getMailGroupMember($params = array()){
        $ret = self::getClient()->call('joint', 'itserver/mail_group_manage', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }
    /**
     * 远程添加 邮件组信息
     * @param array $params
     * @return bool
     */
    public  function jointMailGroup($params = array() ){
        $ret = self::getClient()->call('joint', 'itserver/email_group_joint', $params);
        $ret = self::parseRemoteData($ret);
        return $ret;
    }


}
