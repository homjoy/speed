<?php
namespace Admin\Modules\Meeting;

use Admin\Modules\Common\BaseModule;
use Admin\Package\Common\Response;
use Admin\Package\Meeting\RoomService;

/**
 * 会议室修改
 * Class Home
 *
 * @package Admin\Modules\Meeting
 */
class AjaxServiceUpsert extends BaseModule {
	
	protected $errors = NULL;
	private   $params = NULL;
//    protected $checkUserPermission = TRUE;
	public static $VIEW_SWITCH_JSON = TRUE;

	public function run() {
	    $this->_init();

		//获取office的数据
		if(!empty($this->params['service_name'])){
			$upsert_array = array(
				'room_id' => $this->params['room_id'],
				'service_status' => 'ok',
				'status' => 1
			);
			//默认的config
			$default_config = array(
				'time_start' =>'-10',
				'time_end'  =>'-10',
			);
			$return_result = array();
			foreach($this->params['service_name'] as $service_name){
				$service_name = trim($service_name);
				$upsert_array['service_id'] = $service_name;
				$config_user = !empty($this->params['config_user_'.$service_name]) ? $this->params['config_user_'
				.$service_name] : array();
				if(!empty($config_user)){
					$config_user = explode(',',$config_user);
					$default_config['user'] =$config_user;
					$upsert_array['config'] = ( $default_config );
				}else{
					$default_service_config = RoomService::getInstance()->roomServiceGet(array('service_id' => $service_name));
					$default_service_config = current($default_service_config);
					//var_dump($default_service_config);
					$upsert_array['config'] = isset($default_service_config['config']) ?
						json_decode($default_service_config['config'],true) : array() ;
				}

				$return_result[] = RoomService::getInstance()->roomServiceRuleUpdate($upsert_array);

			}

			//判断取消的服务项目
			$all_rule_id = array();
			foreach($this->params as $params_key=> $params_val){
				if(substr($params_key,0,8)=='rule_id_' && $params_val !=''){
					$service_id_key = substr($params_key,8);
					if(!in_array($service_id_key,$this->params['service_name'])) {
						$all_rule_id[$service_id_key] = $params_val;
					}
				}
			}
			if(!empty($all_rule_id )){
				$del_array = array(
					'room_id' => $this->params['room_id'],
				);
				foreach($all_rule_id as $rule_key =>$rule_value){
					$del_array['service_id'] = $rule_key;
					$return_result[] = RoomService::getInstance()->roomServiceRuleDelete($del_array);
				}
			}

		}
		$return = Response::getInstance()->gen_success('修改服务成功');
        return $this->app->response->setBody($return);


	}



	/**
	 * config_user_1: "2837"
	config_user_3: ""
	config_user_5: ""
	config_user_7: ""
	room_id: "53 "
	rule_id_1: "319"
	rule_id_3: "321"
	rule_id_5: ""
	rule_id_7: ""
	service_name: ["1", "3"]
	 */

	private function _init() {

		$this->rules = array(
			'config_user_1'  => array(
				'type'    => 'string',
				'default' => 0
			),
			'config_user_3'  => array(
				'type'    => 'string',

			),
			'config_user_5'  => array(
				'type'    => 'string',
			),
			'config_user_7'  => array(
				'type'    => 'string',
			),
			'room_id'  => array(
				'type'    => 'integer',
				'required' => true,
			),
			'rule_id_1'  => array(
				'type'    => 'string',
			),
			'rule_id_3'  => array(
				'type'    => 'string',
			),

			'rule_id_5'  => array(
				'type'    => 'string',
			),

			'rule_id_7'  => array(
				'type'    => 'string',
			),
			'service_name'  => array(
				'type'    => 'multiID',
				'required' => TRUE,
				'allowEmpty' => FALSE,
			),



		);
        $this->params = $this->post()->safe();
        $this->errors = $this->post()->getErrors();
	}
	
}