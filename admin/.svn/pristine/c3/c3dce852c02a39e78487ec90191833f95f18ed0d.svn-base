<?php
namespace Admin\Modules\Mail;

use Admin\Modules\Common\BaseModule;
use Admin\Package\Common\Response;
use Admin\Package\Mail\MailGroupUser;
/**
 * 静态邮件列表处理接口
 *
 * @author guojiezhu@meilishuo.com
 * @since  2015-11-04
 */
class MailUserList extends BaseModule
{

    protected $errors = null;
    private $params = null;
    private $page_size = 20;

    public function run()
    {
        $this->_init();
        //分页控制
        if (isset($this->params['page'])) {
            if ($this->params['page'] <= 0) {
                $this->params['page'] = 1;
            }
            $this->params['limit'] = $this->page_size;
        }
        if(!$this->params['user_mail']){
            $mail = explode('@',$this->params['user_mail']);
            $this->params['user_mail'] = trim($mail[0]);
        }
        //查询总的页数
        $this->params['all'] = 1;
        //获取邮箱的列表
        $this->params['mail_suffix_type'] = array(1,2);
        //获取数据
        $email_user_list =MailGroupUser::getInstance()->getMailUserList($this->params);

        $return['search_params'] = $this->params;
        if(!empty($email_user_list)) {
            foreach ($email_user_list as &$value) {
                $mail_suffix = $this->get_mail_suffix($value['mail_suffix_type']);
                $value['user_mail'] = $value['user_mail'] . $mail_suffix;
            }
            unset($value);
        }

        $return['data'] = $email_user_list;
        return $this->app->response->setBody($return);

    }

    /**
     * 获取邮箱的后缀
     */
    public  function get_mail_suffix($type){
        switch($type){
            case 1: return '@meilishuo.com';
            case 2: return '@kf.meilishuo.com';
            default:
                return '@meilishuo.com';
        }
    }


    private function _init()
    {

        $this->rules = array(
                'status' => array(
                    'type' => 'integer',
                    'default' => 1
                ),
                'page'   => array(
                    'type' => 'integer',
                    'default' => 1
                ),
                'group_id'=>array(
                    'required' => TRUE,
                    'type'=>'string',
                ),
                'user_mail' => array(
                    'type'=>'string',
                ),
        );
        $this->params = $this->request()->safe();
        $this->errors = $this->request()->getErrors();
    }

}