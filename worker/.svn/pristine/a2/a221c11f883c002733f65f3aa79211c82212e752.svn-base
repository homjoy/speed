<?php

namespace Worker\Package\Notification;

use Worker\Package\Notification\PhpMailer;
use Worker\Package\Notification\Smtp;

/**
 *
 * Class Mailer
 *
 * @package Worker\Package\Notification
 */
class Mailer {
    //来源
    protected static $from_mail = 'speed@mlsmsg.meilishuo.com';
    //密码
    protected static $mail_pwd = 'Speed123456789!';
    //服务器地址
    protected static $server_mail = 'reportmail.meilishuo.com';

    protected static $_instance = null;
    /**
     * 通知推送
     *
     * @param $mail
     *
     * @return bool
     * @throws \Exception
     */
    public static function notification($mail) {
        $from = array(
            'name' => '美丽小秘书',
                //'mail' => 'notification@speed.meilishuo.com',
                //'mail' => static::$from_mail,
        );

        return static::send($from, $mail['to'], $mail['title'], $mail['content']);
    }

    /**
     * @param string $from    发送人
     * @param array  $to      邮箱列表
     * @param string $subject 邮件标题
     * @param string $content 邮件内容
     *
     * @return bool
     * @throws \Exception
     */
    private static function send($from, $to, $subject, $content) {
        if (empty($from) || empty($to) || empty($subject) || empty($content)) {
                throw new \InvalidArgumentException("邮件发送参数不能为空.");
        }

        $mail = self::mailSingleton();
        $mail->setFrom( self::$from_mail, $from['name']);
        $mail->clearAddresses();
        $mail->clearReplyTos();
        $mail->clearAllRecipients();
        $mail->clearBCCs();
        $mail->clearCCs();
        $mail->addAddress($to);    //发件人
        $mail->isHTML(true);       // Set email format to HTML
        $mail->Subject = $subject;
        $mail->Body = $content;
        $success = $mail->send();
        if (!$success) {
            throw new \Exception("Mailer:send发送邮件出错，邮件信息：{$to},{$subject},{$content},{$mail->ErrorInfo}");
        }
        return $success;
    }

    /**
     * 邮箱的单例对象
     */
    private static function mailSingleton(){
        if(is_null(self::$_instance)){
            $mail = new PhpMailer();
            $mail->isSMTP();                                      // Set mailer to use SMTP
            $mail->Host = self::$server_mail;                     // Specify main and backup SMTP servers
            $mail->SMTPAuth = true;                               // Enable SMTP authentication
            $mail->Username = self::$from_mail;                   // SMTP username
            $mail->Password = self::$mail_pwd;
            $mail->CharSet    = 'utf-8';
            //$mail->SMTPSecure = 'ssl';
            //$mail->Port = 465;
            self::$_instance = $mail;
        }
        return self::$_instance;
    }


}
