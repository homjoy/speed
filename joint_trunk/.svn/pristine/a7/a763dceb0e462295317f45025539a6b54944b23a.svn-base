<?php
namespace Joint\Modules\Releaseauth;
use Libs\Util\Format;
use Joint\Modules\Common\BaseModule;
use Joint\Package\Common\Response;
/**
 * 线上权限收回
 * @author hongzhou@meilishuo.com
 * @since 2015-8-13 下午2:53:13
 */
defined('ONLINE_HOST') || define("ONLINE_HOST", 'http://relay01.meilishuo.com/');
class OnlineAuthRecover extends BaseModule {
	
	protected $errors = NULL;
	private   $params = NULL;
	private   $url    = 'apis/km.php?';
	private   $data   = NULL;
	const     MD_STRING = 'mlsRelay@2015';
	public function run() {
	    $this->_init();
	    //参数处理
	    if ($this->post()->hasError()) {
            $return = Response::gen_error(10001, '', $this->errors);
            return $this->app->response->setBody($return);
        }
        $is_mail = preg_match('/@/', $this->params['mail']);

	    if ($is_mail) { // 邮箱
	        $is_mail = explode("@",$this->params['mail']);
	        $is_mail = $is_mail[0];
	    }else{
	    	$is_mail =  $this->params['mail'];
	    }//得到前缀 拼接curl
	    $curl_time =time();
	    //md
        $md_s  = NULL;
        $md_s .= $is_mail;
        $md_s .= $curl_time;
        $md_s .= self::MD_STRING;
        $md_s  = md5($md_s);

		$this->data = array(
			'username'=> $is_mail,
			'time'    => $curl_time,
			'seckey'  => $md_s,
			'action'  => "deleteuser"
			); 
	    $this->url = ONLINE_HOST.$this->url.http_build_query($this->data);
		$curl_obj = new  \Libs\Sphinx\curl;
		$ret = $curl_obj->get($this->url);
		$body = $ret['body'];
		$body = json_decode($body, TRUE);
		switch ($body['__STATUS__']) {
			case 'OK':
				$return = Response::gen_success(array('message'=>$body['__MSG__']));
				break;
			case 'ERROR':
                if($body['__MSG__']=='USER NOT FOUND'){
                    $return = Response::gen_success($body['__MSG__']);
                }else{
                    $return = Response::gen_error(30001,'', $body['__MSG__']);
                }
				break;
			default:
				$return = Response::gen_error(50004,'','权限收回失败');	
				break; 
		}
    	$this->app->response->setBody($return);
	
	}

	
	private function _init() {
		
		$this->rules = array(
            'mail' => array(
				'required' => TRUE,
				'allowEmpty' => FALSE,
				'type'=>'string',
				'maxLength'=> 30
			)
			);

        $this->params = $this->post()->safe();
        $this->errors = $this->post()->getErrors();
		return TRUE;
	}
	
}