/*
 ajax请求转发
 */
function aj() {
    return this;
}
var controlFns = {
    time: function (params) {
        "use strict";
        var php = {
            'my': '/meeting/get_my_meeting_list',
            'add': '/routine/user_time_add',
            'get': '/routine/user_time_get',
            'update': '/routine/user_time_update',
            'decline': '/routine/user_time_reject',
            'delete': '/routine/user_time_delete',
            'search': '/routine/user_time_batch_get',
            'change_time': '/routine/user_time_update_time'
        };
        this.ajaxTo(php[params]);
    }
    , meeting: function (params) {
        // 会议室 我的时间相关ajax接口
        var php = {
            'rooms': '/meeting/get_room',
            'search_rooms': '/meeting/search_available_room',
            'add': '/book/meeting_book_add',
            'update': '/book/meeting_book_update',
            'change_time': '/book/meeting_update_time',
            'decline': '/book/invite_reply',
            'delete': '/book/meeting_book_delete',
            'overview': '/book/book_overview',
            'get_book_list': '/book/get_room_books',
            'get_book': '/book/get_book',
            'get_check_in': '/book/get_meeting_sign_list',
            'check_in': '/book/meeting_sign_confirm'
        };
        this.ajaxTo(php[params]);
    }
    , share_time: function (params) {
        // 审批选项接口，审批全部
        var php = {
            'user_share_add': '/routine/user_share_add',
            'user_share_delete': '/routine/user_share_delete',
            'user_share_update': '/routine/user_share_update'
        };
        this.ajaxTo(php[params]);
    }
    , check: function (params) {
        // 审批选项接口，审批全部
        var php = {
            'check_all': '/box/ajax_box'
        };
        this.ajaxTo(php[params]);
    }
    , address: function (params) {
        // 搜人名接口
        var php = {
            'ajax_search_name': '/contacts/ajax_search',
            'ajax_search_mobile': '/contacts/ajax_search_mobile'
        };
        this.ajaxTo(php[params]);
    }
    , user: function (params) {
        // 个人中心接口
        var php = {
            'login': '/auth/login',
            'disguise': '/auth/login_disguise',
            'send_sms_captcha': '/user/ajax_send_sms_captcha',
            'save_password': '/user/ajax_edit_pwd',
            'user_avatar_upload': '/user/user_avatar_upload',
            'user_avatar_save': '/user/user_avatar_save',
            'save_info': '/user/self_info_update',
            'mls_user_info': '/account/get_meilishuo_user_info'
        };
        this.ajaxTo(php[params]);
    }
    , it: function (params) {
        // IT服务接口
        var php = {
            //wifi修改密码接口
            'save_wifi_password': '/itserver/wifi_edit_pwd',
            //访客WiFi创建接口
            'create_visitor_wifi': '/itserver/visitor_wifi_create',
            //访客wifi禁用
            'disable_visitor_wifi': '/itserver/visitor_wifi_disable',
            //修改vpn密码
            'save_vpn_password': '/itserver/vpn_edit_pwd'
        };
        this.ajaxTo(php[params]);
    }
    , hr: function (params) {
        // 人力资源
        var php = {
            //请假接口
            //获取请假可用天数
            'user_own_leave': '/hr_leave/user_own_leave ',
            //计算请假天数
            'leave_days_calculation': '/hr_leave/leave_days_calculation',
            //提交
            'leave_submit': '/hr_leave/leave_submit',

            //已申请接口获取数据
            'leave_list_get': '/hr_leave/leave_list_get',
            //审批数据列表接口
            'approve_list_get': '/hr_leave/approve_list_get',
            //获取请假详细信息
            'get_approve_request': '/hr_leave/get_approve_request',
            //撤销请假-申请人
            'leave_revoke': '/hr_leave/leave_revoke',
            //获取某个请假的审批流程-申请人
            'approve_leave_info': '/hr_leave/approve_leave_info',
            //获取历史请假记录-审批人
            'history_leave_list': '/hr_leave/history_leave_list',
            //同意驳回
            'leave_process': '/hr_leave/leave_process'
        };
        this.ajaxTo(php[params]);
    }
};
exports.__create = controller.__create(aj, controlFns);
