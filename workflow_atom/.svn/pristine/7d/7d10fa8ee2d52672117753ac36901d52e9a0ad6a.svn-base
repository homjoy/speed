<?php 
namespace WorkFlowAtom\Modules\Process;

use WorkFlowAtom\Modules\Common\BaseModule;
use WorkFlowAtom\Package\Common\Response;
use WorkFlowAtom\Package\Process\Task;
use Libs\Util\Format;

/**
 * 工作流创建
 * @author jingjingzhang@meilishuo.com
 * @date 2015-7-20 
 */

class TaskCreate extends BaseModule {

	protected $task = array();
	protected $errors = array();
	private $sample;

	public function run() {

		$this->_init();

		$this->sample = Task::getInstance()->getFields();
		
		//参数校验
		if ($this->post()->hasError()) {
			$return = Response::gen_error(10001, '', $this->errors);
        	return $this->app->response->setBody($return);
		}

		if (empty($this->task['tasktype_id']) || empty($this->task['user_id'])) {
			$return = Response::gen_error(10001);
        	return $this->app->response->setBody($return);
		}

		$result = Task::getInstance()->insert($this->task);

		if ($result === FALSE) {
			$return = Response::gen_error(50001);
		} else if (empty($result)) {
			$return = Response::gen_error(50012);
		} else {
			$this->task['task_id'] = $result;
			$return = Response::gen_success(Format::outputData($this->task, $this->sample));
		}

		$this->app->response->setBody($return);
	}

	private function _init() {

		$this->rules = array(
			'tasktype_id' => array(
				'required'   => TRUE,
				'type'       => 'integer',
				'maxLength'  => 5,
			),
			'user_id' => array(
				'required'   => TRUE,
				'type'       => 'integer',
				'maxLength'  => 11,
			),
			'task_name' => array(
				'required'   => TRUE,
				'allowEmpty' => FALSE,
				'type'       => 'string',
				'maxLength'  => 100,
			),
			'task_content' => array(
				'required'   => TRUE,
				'allowEmpty' => FALSE,
				'type'       => 'string',
			),
			'current_user_id' => array(
				'type'       => 'integer',
				'default'    => 0,
				'maxLength'  => 11,
			),
		);

		$this->task = $this->post()->safe();
		$this->errors = $this->post()->getErrors();
	}
}